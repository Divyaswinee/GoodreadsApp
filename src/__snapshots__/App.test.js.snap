// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="searchHeader"
        >
          <SearchComponent
            onSearchCallback={[Function]}
            showDetailCallBack={[Function]}
          />
        </div>,
        <div
          className="searchBody"
        >
          <div
            className="iconDiv"
          >
            <img
              alt=""
              className="iconStyle"
              src="./books.ico"
            />
            <span
              className="labelStyle"
            >
              BOOKLET
            </span>
          </div>
        </div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SearchComponent
            onSearchCallback={[Function]}
            showDetailCallBack={[Function]}
          />,
          "className": "searchHeader",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onSearchCallback": [Function],
            "showDetailCallBack": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="iconDiv"
            >
              <img
                alt=""
                className="iconStyle"
                src="./books.ico"
              />
              <span
                className="labelStyle"
              >
                BOOKLET
              </span>
            </div>,
          ],
          "className": "searchBody",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt=""
                  className="iconStyle"
                  src="./books.ico"
                />,
                <span
                  className="labelStyle"
                >
                  BOOKLET
                </span>,
              ],
              "className": "iconDiv",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "",
                  "className": "iconStyle",
                  "src": "./books.ico",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "BOOKLET",
                  "className": "labelStyle",
                },
                "ref": null,
                "rendered": "BOOKLET",
                "type": "span",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="searchHeader"
          >
            <SearchComponent
              onSearchCallback={[Function]}
              showDetailCallBack={[Function]}
            />
          </div>,
          <div
            className="searchBody"
          >
            <div
              className="iconDiv"
            >
              <img
                alt=""
                className="iconStyle"
                src="./books.ico"
              />
              <span
                className="labelStyle"
              >
                BOOKLET
              </span>
            </div>
          </div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SearchComponent
              onSearchCallback={[Function]}
              showDetailCallBack={[Function]}
            />,
            "className": "searchHeader",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onSearchCallback": [Function],
              "showDetailCallBack": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="iconDiv"
              >
                <img
                  alt=""
                  className="iconStyle"
                  src="./books.ico"
                />
                <span
                  className="labelStyle"
                >
                  BOOKLET
                </span>
              </div>,
            ],
            "className": "searchBody",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt=""
                    className="iconStyle"
                    src="./books.ico"
                  />,
                  <span
                    className="labelStyle"
                  >
                    BOOKLET
                  </span>,
                ],
                "className": "iconDiv",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "",
                    "className": "iconStyle",
                    "src": "./books.ico",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "BOOKLET",
                    "className": "labelStyle",
                  },
                  "ref": null,
                  "rendered": "BOOKLET",
                  "type": "span",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
